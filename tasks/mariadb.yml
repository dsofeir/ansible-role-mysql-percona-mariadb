# ansible tasks file for role dsofeir.mysql_percona_mariadb
#
## Tasks which install MariaDB
#
# author: David Foley <dev@dfoley.ie>
# licence:
#
#  Copyright 2019 David John Foley
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
- block:
  - set_fact: runtime_mariadb_already_installed=false

  - set_fact: runtime_mariadb_already_installed=true
    when: "'mariadb' in ansible_facts.packages"

# ___ init ___

  - name: Install MariaDB
    yum:
      name:
        - mariadb-server
        - mariadb
      state: installed

  - name: Apply custom configuration to /etc/my.cnf
    blockinfile:
      block: "{{ mysql_percona_mariadb.custom_config }}"
      dest: /etc/my.cnf
      backup: yes
      validate: mysqld --defaults-file=%s --validate-config
    when: mysql_percona_mariadb.custom_config != none

  - name: Enable and start MariaDB server service
    service: name=mariadb state=started enabled=yes

  - name: Set new MySQL root password
    command: mysqladmin --user=root password {{ mysql_percona_mariadb.root_password }}
    when: runtime_mariadb_already_installed == false

  - name: Secure MySQL installation
    command: "mysql --user=root --password='{{ mysql_percona_mariadb.root_password }}' --execute=\"DELETE FROM mysql.user WHERE User=''; DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');DROP DATABASE IF EXISTS test;DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';FLUSH PRIVILEGES;\""
    when: runtime_mariadb_already_installed == false

  - name: Create databases
    command: "mysql --user=root --password='{{ mysql_percona_mariadb.root_password }}' --execute=\"CREATE DATABASE IF NOT EXISTS {{ item }}\""
    with_items: "{{ mysql_percona_mariadb.databases }}"
    when: mysql_percona_mariadb.databases is defined

  - name: Check if users already exist
    command: "mysql --user=root --password='{{ mysql_percona_mariadb.root_password }}' -s --execute=\"SELECT EXISTS(SELECT 1 FROM mysql.user WHERE user = '{{ item.username }}' and host = '{{ item.host }}') as user_exists;\""
    register: runtime_mariadb_check_users
    with_items: "{{ mysql_percona_mariadb.users }}"
    when: mysql_percona_mariadb.users is defined

  - name: Create users
    command: "mysql --user=root --password='{{ mysql_percona_mariadb.root_password }}' --execute=\"CREATE USER '{{ item['item']['username'] }}'@'{{ item['item']['host'] }}' IDENTIFIED BY '{{ item['item']['password'] }}'; GRANT {{ item['item']['privileges'] }} ON {{ item['item']['db'] }} TO '{{ item['item']['username'] }}'@'{{ item['item']['host'] }}';\""
    with_items: "{{ runtime_mariadb_check_users['results'] }}"
    when:
      - item['stdout'] == "0"
      - mysql_percona_mariadb.users is defined

  tags: [ role.dsofeir.mysql_percona_mariadb-mariadb ]
